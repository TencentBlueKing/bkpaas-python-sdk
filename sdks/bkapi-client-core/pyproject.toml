[tool.poetry]
name = "bkapi-client-core"
version = "1.2.1"
description = "A toolkit for buiding blueking API clients."
readme = "README.md"
authors = ["blueking <blueking@tencent.com>"]
license = "MIT"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]

[project.urls]
Homepage = "https://github.com/TencentBlueKing/bkpaas-python-sdk/"
Repository = "https://github.com/TencentBlueKing/bkpaas-python-sdk/"

[tool.poetry.dependencies]
python = "^2.7 || ^3.6"
requests = ">=2.20"
typing = { version = "^3.10.0", python = "2.7" }
curlify = ">=2.0"
bkoauth = { version = ">=0.0.10", optional = true }
typing-extensions = ">=3.7.4"
prometheus-client = { version = ">=0.9.0", optional = true }
six = "*"

[tool.poetry.extras]
django = ["bkoauth", "prometheus-client"]
monitor = ["prometheus-client"]

[tool.poetry.dev-dependencies]
pytest = { version = "^7.0.1", python = "^3.6" }
pytest-cov = { version = "^4.0.0", python = "^3.6" }
pytest-mock = { version = "^3.6.1", python = "^3.6" }
pytest-django = { version = "^4.5.0", python = "^3.6" }
Faker = { version = "^14.2.1", python = "^3.6" }
mypy = { version = "^0.971", python = "^3.7" }
pre-commit = { version = "^2.17.0", python = "^3.7" }
requests-mock = { version = "^1.9.3" }
tox = { version = "^3.23.0", python = "^3.6" }
more-itertools = "^5.0"
types-requests = { version = "^2.25.0", python = "^3.6" }
types-six = { version = "1.16.21.9", python = "^3.6" }
dataclasses = { version = "0.8", python = "~3.6" }
django = "1.11.20"
prometheus-client = { version = "*" }
bkoauth = { version = "*", optional = true }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "tencent"
url = "https://mirrors.cloud.tencent.com/pypi/simple/"
priority = "default"

[tool.mypy]
ignore_missing_imports = true
follow_imports = "skip"
no_implicit_optional = true
show_error_codes = true
strict_optional = true
pretty = true

[[tool.mypy.overrides]]
module = ["*.migrations.*"]
ignore_errors = true

[tool.pytest.ini_options]
addopts = "-p no:pastebin -p no:nose -p no:doctest -p no:warnings"
testpaths = ["tests"]

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 3.23.0
isolated_build = True
envlist = py{37}-requests2-{20,26}

[gh-actions]
python =
    3.7: py37

[testenv]
allowlist_externals = pytest
deps =
  requests2-20: requests==2.20
  requests2-26: requests==2.26
commands =
  pytest tests
"""
